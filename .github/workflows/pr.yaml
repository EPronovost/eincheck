name: Test PR

on: pull_request

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      # From https://github.com/marketplace/actions/install-poetry-action
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------

      - name: black
        run: poetry run black --check .

      - name: isort
        run: poetry run isort --check .

      - name: flake8
        run: poetry run flake8

      - name: mypy
        run: poetry run mypy .

      - name: pytest
        run: poetry run pytest --cov=eincheck